#!/usr/bin/env bash

# OH MY P-C-C-C-C-C

# Icons Folder
icon_dir="$HOME/.config/dunst/assets"

# Vars
_step="2"
_timeout="1200"

# Check for stuff
_tools() {
  if command -v amixer &> /dev/null; then
    _tool="amixer"
  elif command -v wpctl &> /dev/null; then
    _tool="wpctl"
  elif command -v pactl &> /dev/null; then
    _tool="pactl"
  elif command -v pamixer &> /dev/null; then
    _tool="pamixer"
  else
    echo "No volume control tool found."
    exit 1
  fi
}

# https://gist.github.com/palopezv/efd34059af6126ad970940bcc6a90f2e
_commands() {
  case $_tool in
    amixer)
      volume_up_cmd="amixer set Master $_step%+"
      volume_down_cmd="amixer set Master $_step%-"
      mute_cmd="amixer set Master toggle"
      ;;
    wpctl)
      volume_up_cmd="wpctl set-volume @DEFAULT_AUDIO_SINK@ $_step%+"
      volume_down_cmd="wpctl set-volume @DEFAULT_AUDIO_SINK@ $_step%-"
      mute_cmd="wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle"
      ;;
    pactl)
      volume_up_cmd="pactl set-sink-volume @DEFAULT_SINK@ +$_step%"
      volume_down_cmd="pactl set-sink-volume @DEFAULT_SINK@ -$_step%"
      mute_cmd="pactl set-sink-mute @DEFAULT_SINK@ toggle"
      ;;
    pamixer)
      volume_up_cmd="pamixer -i $_step"
      volume_down_cmd="pamixer -d $_step"
      mute_cmd="pamixer -t"
      ;;
  esac
}

# HACKS
_volume() {
  local vol
  case $_tool in
    amixer)
      vol=$(amixer get Master | grep -oP '\d+%' | head -1 | tr -d '%')
      ;;
    wpctl)
      vol=$(wpctl get-volume @DEFAULT_AUDIO_SINK@ | awk '{print ($2 * 100)}')
      ;;
    pactl)
      vol=$(pactl get-sink-volume @DEFAULT_SINK@ | awk '{print $5}' | tr -d '%')
      ;;
    pamixer)
      vol=$(pamixer --get-volume-human | tr -d '%')
      ;;
    *)
      exit 1
      ;;
    esac
  echo "$vol"
}

# MORE HACKS
is_muted() {
  case $_tool in
    amixer)
      amixer get Master | grep -oP '\[off\]' | grep -q 'off' && echo "true" || echo "false"
      ;;
    wpctl)
      wpctl get-volume @DEFAULT_AUDIO_SINK@ | awk '{print ($3 == "[MUTED]" ? "true" : "false")}'
      ;;
    pactl)
      pactl get-sink-mute @DEFAULT_SINK@ | awk '{print $2}' | grep -q 'yes' && echo "true" || echo "false"
      ;;
    pamixer)
      pamixer --get-mute
      ;;
    *)
      exit 1
      ;;
  esac
}

_debug() {

cat << DEBUG
=============================================
          Current Controller: $_tool
          Volume Level: $(_volume)%
          Muted: $(is_muted)
=============================================

DEBUG
}

_icons() {
  local vol=$(_volume)

  if [[ "$vol" -eq 0 ]]; then
    echo "$icon_dir/volume-mute.svg"
  elif [[ "$vol" -le 20 ]]; then
    echo "$icon_dir/volume-off.svg"
  elif [[ "$vol" -le 40 ]]; then
    echo "$icon_dir/volume-low.svg"
  elif [[ "$vol" -le 60 ]]; then
    echo "$icon_dir/volume-medium.svg"
  else
    echo "$icon_dir/volume-high.svg"
  fi
}

_notify() {
  notify-send -e -r 91190 -t $_timeout -h int:value:"$(_volume)" -h string:x-canonical-private-synchronous:volume_notif -u normal -i "$(_icons)" "Volume: $(_volume)%"
}

_mute() {
  $mute_cmd > /dev/null

  if [ "$(is_muted)" == "true" ]; then
    notify-send -e -r 91190 -t $_timeout -h int:value:"$(_volume)" -h string:x-canonical-private-synchronous:volume_notif -u normal -i "$icon_dir/volume-mute.svg" "Muted"
  elif [ "$(is_muted)" == "false" ]; then
    _notify
  fi
}

_inc() {
  $volume_up_cmd > /dev/null
  _notify
}

_dec() {
  $volume_down_cmd >/dev/null 2>&1
  _notify
}

_tools
_commands

case $1 in
  --get)
    _volume
    ;;
  --inc)
    _inc
    ;;
  --dec)
    _dec
    ;;
  -m|"--toggle")
    _mute
    ;;
  -D|"--debug")
     _debug
    ;;
  *|"--help"|"-h")
    echo "Usage: $0 [options]"
    echo "  --get, -v         Get current volume level"
    echo "  --inc,            Increase volume"
    echo "  --dec,            Decrese volume"
    echo "  --toggle, -m      Mute"
    echo "  --debug, -D       Show debug information"
    echo "  --help, -h        Show this help message"
    exit 1
    ;;
esac
